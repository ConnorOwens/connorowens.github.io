{"version":3,"sources":["Intro.js","aboutme.js","links.js","skills.js","projects.js","coursework.js","App.js","serviceWorker.js","index.js"],"names":["Intro","className","src","alt","width","margin","AboutMe","Links","Button","href","variant","Skills","Projects","useState","value","setValue","ToggleButtonGroup","max-width","name","type","defaultValue","onChange","val","ToggleButton","ProjectManager","props","LZW","CShell","Frogger","AStar","BombSamurai","SlashAndSummon","height","controls","Coursework","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","App","document","title","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df0bc621.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Intro.css'\r\n\r\nfunction Intro() {\r\n  return (\r\n    <div className=\"intro_body\">\r\n      <div className=\"name_div\">\r\n        <p className=\"name\"> Connor Owens</p>\r\n      </div>\r\n      <div className=\"profile_div\">\r\n        <img className=\"profile_pic\" src=\"profile_pic.JPG\" alt=\"Connor Owens\"/>\r\n      </div>\r\n      <img src=\"cal_poly_background.jpg\" alt=\"Cal Poly Campus\" width=\"100%\" margin=\"0\"/>\r\n      <div className=\"connor_info\">\r\n        <p className=\"heading_2\">Computer Engineering Student</p>\r\n\r\n        <img className=\"cal_poly_logo\" src=\"cal_poly_logo.png\" alt=\"Cal Poly\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport './aboutme.css';\r\nimport './font.css';\r\n\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <div className=\"aboutme_body\">\r\n      <p className=\"heading_text\">\r\n        About Me\r\n      </p>\r\n      <p className=\"body_text\">\r\n        I am a third-year Computer Engineering student at California Polytechnic State University, San Luis Obispo planning to graduate in June of 2022.\r\n        I currently have a GPA of 3.578 and am in the process of earning a Bachelor of Science in Computer Engineering.\r\n      </p>\r\n      <p className=\"body_text\">\r\n        I am currently looking for internship positions in the scope of Computer Engineering, Computer Science, Software Engineering, Electrical Engineering or any other related fields.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport './links.css';\r\nimport './font.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Links() {\r\n  return(\r\n    <div className=\"links_body\">\r\n      <p className=\"heading_text\">\r\n        Links\r\n      </p>\r\n      <Button className=\"link_button\" href=\"https://github.com/ConnorOwens\" variant=\"outline-success\"><p width=\"100%\">GitHub</p> <div width=\"100%\"><img className=\"link_picture\" alt=\"Github Logo\" src=\"Github.png\"/></div></Button>\r\n      <Button className=\"link_button\" href=\"https://www.linkedin.com/in/ConnorGOwens/\" variant=\"outline-success\"><p width=\"100%\">LinkedIn</p> <div width=\"100%\"><img className=\"link_picture\" alt=\"LinkedIn Logo\" src=\"linkedin.png\"/></div></Button>\r\n      <Button className=\"link_button\" href=\"https://connorowens.github.io/resume.pdf\" variant=\"outline-success\"><p width=\"100%\">Resume</p> <div width=\"100%\"><img className=\"link_picture\" alt=\"Resume Logo\" src=\"resume.png\"/></div></Button>\r\n      <Button className=\"link_button\" href=\"mailto:owensconnor1@gmail.com\" variant=\"outline-success\"><p width=\"100%\">Email</p> <div width=\"100%\"><img className=\"link_picture\" alt=\"Email Logo\" src=\"email.png\"/></div></Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\nimport './skills.css';\r\nimport './font.css';\r\n\r\nfunction Skills() {\r\n  return(\r\n    <div className=\"skills_body\">\r\n      <p className=\"heading_text\">\r\n        Skills\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        C\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        Java\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        Python\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        HTML\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        CSS\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        JavaScript\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        React\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        SystemVerilog\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        Vivado\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        Arduino\r\n      </p>\r\n      <p className=\"skills_square\">\r\n        Assembly Language\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills;\r\n","import React, { useState } from 'react';\r\nimport './projects.css';\r\nimport './font.css';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\n\r\nfunction Projects() {\r\n  const [value, setValue] = useState(1);\r\n  const handleChange = (val) => setValue(val);\r\n  return(\r\n    <div className=\"projects_body\">\r\n      <p className=\"heading_text\">\r\n        Projects\r\n      </p>\r\n      <div width=\"100%\">\r\n        <ToggleButtonGroup max-width=\"100%\" name=\"projects_radio\" type=\"radio\" value={value} defaultValue={1} onChange={handleChange}>\r\n          <ToggleButton variant=\"outline-success\" value={1}>LZW Compression</ToggleButton>\r\n          <ToggleButton variant=\"outline-success\" value={2}>C Shell</ToggleButton>\r\n          <ToggleButton variant=\"outline-success\" value={3}>Frogger</ToggleButton>\r\n          <ToggleButton variant=\"outline-success\" value={4}>A* Search Algorithm</ToggleButton>\r\n          <ToggleButton variant=\"outline-success\" value={5}>Bomb Samurai</ToggleButton>\r\n          <ToggleButton variant=\"outline-success\" value={6}>Slash and Summon</ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </div>\r\n      <div className=\"project_info\">\r\n        <ProjectManager value={value}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n\r\nfunction ProjectManager(props) {\r\n  if (props.value === 1) {\r\n    return(\r\n      <LZW />\r\n    );\r\n  } else if (props.value === 2) {\r\n    return(\r\n      <CShell />\r\n    );\r\n  } else if (props.value === 3) {\r\n    return(\r\n      <Frogger />\r\n    );\r\n  } else if (props.value === 4) {\r\n    return(\r\n      <AStar />\r\n    );\r\n  } else if (props.value === 5) {\r\n    return(\r\n      <BombSamurai />\r\n    );\r\n  }else if (props.value === 6) {\r\n    return(\r\n      <SlashAndSummon />\r\n    );\r\n  }else {\r\n    return(<p>ERROR</p>);\r\n  }\r\n}\r\n\r\nfunction LZW() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p>Using C, I implemented the <a href=\"https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch\">LZW compression algorithm</a> with a <a href=\"https://en.wikipedia.org/wiki/Trie#:~:text=In%20computer%20science%2C%20a%20trie,the%20keys%20are%20usually%20strings.\">Trie</a> data structure, allowing for easy storage and retrieval of compression codes.\r\n      </p>\r\n      <p>The following demonstration shows the algorithm compressing one million words in one eighth of a second:</p>\r\n      <video  className=\"lzw_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"lzw_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or would like to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n\r\nfunction CShell() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p>Using C, I developed a <a href=\"https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch\">C Shell</a> which can handle Unix commands from the user. It uses a <a href=\"https://en.wikipedia.org/wiki/Pipeline_(computing)#:~:text=In%20computing%2C%20a%20pipeline%2C%20also,or%20in%20time%2Dsliced%20fashion.\">Pipline</a>, created using fork and exec, to allow commands to be piped together i.e. \"ls | wc\".\r\n      </p>\r\n      <p>The following video demonstrates some of the C Shell's supported commands:</p>\r\n      <video  className=\"cshell_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"cshell_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or would like to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n\r\nfunction Frogger() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p>Throughout CPE 233, I developed a <a href=\"https://en.wikipedia.org/wiki/RISC-V#:~:text=RISC%2DV%20(pronounced%20%22risk,not%20require%20fees%20to%20use.\">RISC-V</a> archetecture CPU using Vivado, SystemVerilog and a Basys 3 board. I then developed a game based on <a href=\"https://en.wikipedia.org/wiki/Frogger\">Frogger</a> for the CPU using assembly code.\r\n      </p>\r\n      <p>The following is a video of the game in action:</p>\r\n      <video  className=\"frogger_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"frogger_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or would like to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n\r\nfunction AStar() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p>In order to more efficiently move characters in a game, I implemented the <a href=\"https://en.wikipedia.org/wiki/A*_search_algorithm\">A* Pathing Algorithm</a>. The algorithm allows characters to find the most efficient path from one point to another while avoiding obstacles.\r\n      </p>\r\n      <p>The following is a demonstration of the algorithm in action:</p>\r\n      <video  className=\"astar_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"astar_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or would like to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n\r\nfunction BombSamurai() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p> Using Android Studio, I developed a simple game for Android devices which I named Bomb Samurai. It requires quick reaction timing as players swipe across a bomb either horizantally or vertically before its fuse runs out.\r\n      </p>\r\n      <p>The following is a demonstration of the game in action:</p>\r\n      <video  className=\"bombsamurai_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"bombsamurai_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or check my <a href=\"https://github.com/ConnorOwens\">GitHub</a> to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n\r\nfunction SlashAndSummon() {\r\n  return (\r\n    <body className=\"project_data\">\r\n      <p> Using Java, I developed a game which I named Slash and Summon. It is a competitive game where a player using a keyboard attempts to survive spells cast by a player using a mouse for as long as possible.\r\n      </p>\r\n      <p>The following is a demonstration of the game in action:</p>\r\n      <video  className=\"slashandsummon_video\" width=\"100%\" height=\"auto\" controls>\r\n      <source src=\"slashandsummon_video.mp4\" type=\"video/mp4\"/>\r\n      Your browser does not support the video tag.\r\n      </video>\r\n      <p>\r\n      Please <a href=\"mailto:owensconnor1@gmail.com\">contact me</a> if you have any questions about the project or check my <a href=\"https://github.com/ConnorOwens\">GitHub</a> to see my code.\r\n      </p>\r\n    </body>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './coursework.css';\r\nimport './font.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Coursework() {\r\n  return (\r\n    <body className=\"coursework_body\">\r\n      <div>\r\n        <p className=\"heading_text\">Relevant Coursework</p>\r\n        <p className=\"body_text\"> Click a class to see its course description </p>\r\n        <Accordion >\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"0\">\r\n              CPE 101 - Fundamentals of Computer Science\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n              Basic principles of algorithmic problem solving and programming using methods of top-down design, stepwise refinement and procedural abstraction. Basic control structures, data types, and input/output. Introduction to the software development process: design, implementation, testing and documentation. The syntax and semantics of a modern programming language.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"1\">\r\n              CPE 123 - Introduction to Computing\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body>\r\n              Use of a supportive software development environment to design, develop, and test applications in robotics. An introduction to computing and robotics.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"2\">\r\n              CPE 133 - Digital Design\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body>\r\n              Number systems, Boolean algebra, Boolean functions, and function minimization. Analysis and design of combinational and sequential digital logic circuits. Hardware Description Language (HDL) concepts and applications digital design and synthesis in FPGAs.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"3\">\r\n              CPE 202 - Data Structures\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body>\r\n              Introduction to data structures and analysis of algorithms. Abstract datatypes. Specification and implementation of advanced data structures. Theoretical and empirical analysis of recursive and iterative algorithms. Software performance evaluation and testing techniques.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"4\">\r\n              CPE 203 - Project-Based Object-Oriented Programming and Design\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body>\r\n              Object-oriented programming and design with applications to project construction. Introduction to class design, interfaces, inheritance, generics, exceptions, streams, and testing.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"5\">\r\n              CPE 233 - Computer Design and Assembly Language Programming\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"5\">\r\n              <Card.Body>\r\n              Design and implementation of digital computer circuits via CAD tools for programmable logic devices (PLDs). Basic computer design with its datapath components and control unit. Introduction to assembly language programming of an off-the-shelf RISC-based microcontroller.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"6\">\r\n              CPE 357 - Systems Programming\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"6\">\r\n              <Card.Body>\r\n              C programming language from a system programming perspective. Standard C language including operators, I/O functions, and data types in the context of system functions. Unix commands, shell scripting, file system, editors.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"7\">\r\n              CSC 348 - Discrete Structures\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"7\">\r\n              <Card.Body>\r\n              Structures of computer science: logic, sets, relations, functions, graphs and trees. Propositional and predicate logic. Applications of predicate logic to preconditions, postconditions, and proof techniques. Complexity of algorithms.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"8\">\r\n              IME 156 - Basic Electronics Manufacturing\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"8\">\r\n              <Card.Body>\r\n            Practical electronics manufacturing knowledge expanded through concepts such as CAD/CAM design, Design for Manufacture (DFM), documentation requirements, prototyping and production planning. Hands-on techniques learned for project planning, soldering, automation, hand tool usage and production methods.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"9\">\r\n              EE 112 - Electric Circuit Analysis I\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"9\">\r\n              <Card.Body>\r\n              Introduction to basic circuit analysis. Resistive circuits, voltage and current sources, network theorems.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"10\">\r\n              EE 211 - Electric Circuit Analysis II\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"10\">\r\n              <Card.Body>\r\n              Continuation of basic circuit analysis. Op-amp circuits. Energy storage elements, RC and RL circuits, and AC steady state analysis.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle className=\"clickable\" as={Card.Header} eventKey=\"11\">\r\n              EE 212 - Electric Circuit Analysis III\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"11\">\r\n              <Card.Body>\r\n              AC power, 3-phase circuits. Mutual inductance, series and parallel resonance and two-port networks. Frequency response, including Bode plots.\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n      </body>\r\n  )\r\n}\r\n\r\nexport default Coursework;\r\n","import React from 'react';\nimport './App.css';\nimport Intro from './Intro.js';\nimport AboutMe from './aboutme.js';\nimport Links from './links.js';\nimport Skills from './skills.js';\nimport Projects from './projects.js';\nimport Coursework from './coursework.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.title = \"Connor Owens | Computer Engineering Student @ Cal Poly\";\n  }\n  render(){\n  return (\n      <div className=\"App\">\n        <Intro />\n        <AboutMe />\n        <Links />\n        <Skills />\n        <Projects />\n        <Coursework />\n      </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}